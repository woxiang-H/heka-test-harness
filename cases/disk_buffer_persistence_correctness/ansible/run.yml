---
- import_playbook: reset.yml

- hosts: '{{ test_namespace }}:&tag_TestRole_subject'
  become: true
  tasks:
    - include_role:
        name: test_servers
      vars:
        action: start
        http_server_port: "{{ http_consumer_port }}"
        tcp_server_port: "{{ tcp_consumer_port }}"

    - include_role:
        name: "{{ test_subject }}"
      vars:
        action: start

    - name: Wait for port {{ subject_port }} to become available
      wait_for:
        port: "{{ subject_port }}"
        delay: 1

    - name: Send 1 line to initialize the pipeline and buffer
      shell: |
        echo "{\"log\": \"First line\"}" | socat -u - tcp:127.0.0.1:{{ subject_port }}

    - name: Wait 3 seconds for the message to be sent
      pause:
        seconds: 3

    - include_role:
        name: test_servers
      vars:
        action: stop

    - include_role:
        name: test_servers
      vars:
        action: register_summary

    - name: Ensure that the message was sent and delivery actually works
      assert:
        that:
          - summary.message_count > 0

    - name: Send more lines to be stored in the on-disk buffer without starting the test servers
      shell: |
        echo "{\"log\": \"Line {{ item }}\"}" | socat -u - tcp:127.0.0.1:{{ subject_port }}
      with_sequence: start=2 end=11

    - include_role:
        name: "{{ test_subject }}"
      vars:
        action: stop

    - include_role:
        name: test_servers
      vars:
        action: start
        http_server_port: "{{ http_consumer_port }}"
        tcp_server_port: "{{ tcp_consumer_port }}"

    - include_role:
        name: "{{ test_subject }}"
      vars:
        action: start

    - name: Wait for port {{ subject_port }} to become available
      wait_for:
        port: "{{ subject_port }}"
        delay: 1

    - name: Wait 15 seconds
      pause:
        seconds: 15

    - include_role:
        name: test_servers
      vars:
        action: stop

    - include_role:
        name: "{{ test_subject }}"
      vars:
        action: stop

    - include_role:
        name: test_servers
      vars:
        action: register_summary

    - assert:
        that:
          - summary.message_count > 0
